/**
 * Prfixes a rulename with your prefered prefix.
 * Can also be used to create placeholder and normal classes
 *
 * prefixRules( $ruleName,$prefixes )
 * @type {[string/list]} $ruleName class or/and placeholder name
 * @type {[list]} $refixes selector slug
 *
 * usage:
 *  @include prefixRule( "foo", ".l-" ".is-" "%" ) {
 *      margin: 20px;
 *  }
 * generates:
 *  .l-foo, .is-foo, %foo {
 *      margin: 20px;
 *  }
 *
 */
$default-selector-prefixes: "%" "." !default;

@mixin prefixRule ( $ruleNames, $prefixes: $default-selector-prefixes) {
    $rules: "";
    @each $ruleName in $ruleNames {
        @each $prefix in $prefixes {
            $rules: unquote($rules + $prefix + $ruleName + ",");
        }
    }
    #{$rules} {
        @content;
    }
}
